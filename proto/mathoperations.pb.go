// Code generated by protoc-gen-go.
// source: mathoperations.proto
// DO NOT EDIT!

/*
Package mathoperations is a generated protocol buffer package.

It is generated from these files:
	mathoperations.proto

It has these top-level messages:
	Number
	Result
*/
package mathoperations

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Number struct {
	Value int32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *Number) Reset()                    { *m = Number{} }
func (m *Number) String() string            { return proto.CompactTextString(m) }
func (*Number) ProtoMessage()               {}
func (*Number) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Number) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Result struct {
	Value int32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*Number)(nil), "mathoperations.Number")
	proto.RegisterType((*Result)(nil), "mathoperations.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MathOperationsService service

type MathOperationsServiceClient interface {
	Double(ctx context.Context, in *Number, opts ...grpc.CallOption) (*Result, error)
	Health(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
}

type mathOperationsServiceClient struct {
	cc *grpc.ClientConn
}

func NewMathOperationsServiceClient(cc *grpc.ClientConn) MathOperationsServiceClient {
	return &mathOperationsServiceClient{cc}
}

func (c *mathOperationsServiceClient) Double(ctx context.Context, in *Number, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := grpc.Invoke(ctx, "/mathoperations.MathOperationsService/Double", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mathOperationsServiceClient) Health(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/mathoperations.MathOperationsService/Health", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MathOperationsService service

type MathOperationsServiceServer interface {
	Double(context.Context, *Number) (*Result, error)
	Health(context.Context, *google_protobuf1.Empty) (*google_protobuf1.Empty, error)
}

func RegisterMathOperationsServiceServer(s *grpc.Server, srv MathOperationsServiceServer) {
	s.RegisterService(&_MathOperationsService_serviceDesc, srv)
}

func _MathOperationsService_Double_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Number)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathOperationsServiceServer).Double(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mathoperations.MathOperationsService/Double",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathOperationsServiceServer).Double(ctx, req.(*Number))
	}
	return interceptor(ctx, in, info, handler)
}

func _MathOperationsService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MathOperationsServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mathoperations.MathOperationsService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MathOperationsServiceServer).Health(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _MathOperationsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mathoperations.MathOperationsService",
	HandlerType: (*MathOperationsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Double",
			Handler:    _MathOperationsService_Double_Handler,
		},
		{
			MethodName: "Health",
			Handler:    _MathOperationsService_Health_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mathoperations.proto",
}

func init() { proto.RegisterFile("mathoperations.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0xc9, 0x4d, 0x2c, 0xc9,
	0xc8, 0x2f, 0x48, 0x2d, 0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0x2b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x43, 0x15, 0x95, 0x92, 0x49, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x4f, 0x2c, 0xc8,
	0xd4, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x41, 0x56, 0x2d, 0x25, 0x0d, 0x95, 0x05, 0xf3, 0x92, 0x4a,
	0xd3, 0xf4, 0x53, 0x73, 0x0b, 0x4a, 0x2a, 0x21, 0x92, 0x4a, 0x72, 0x5c, 0x6c, 0x7e, 0xa5, 0xb9,
	0x49, 0xa9, 0x45, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39, 0xa5, 0xa9, 0x12, 0x8c, 0x0a, 0x8c,
	0x1a, 0xac, 0x41, 0x10, 0x0e, 0x48, 0x3e, 0x28, 0xb5, 0xb8, 0x34, 0xa7, 0x04, 0xbb, 0xbc, 0xd1,
	0x42, 0x46, 0x2e, 0x51, 0xdf, 0xc4, 0x92, 0x0c, 0x7f, 0xb8, 0x6b, 0x82, 0x53, 0x8b, 0xca, 0x32,
	0x93, 0x53, 0x85, 0xac, 0xb8, 0xd8, 0x5c, 0xf2, 0x4b, 0x93, 0x72, 0x52, 0x85, 0xc4, 0xf4, 0xd0,
	0x7c, 0x01, 0xb1, 0x51, 0x0a, 0x43, 0x1c, 0x62, 0x93, 0x12, 0x83, 0x90, 0x0f, 0x17, 0x9b, 0x47,
	0x6a, 0x62, 0x4e, 0x49, 0x86, 0x90, 0x98, 0x1e, 0xc4, 0xf5, 0x7a, 0x30, 0xd7, 0xeb, 0xb9, 0x82,
	0x5c, 0x2f, 0x85, 0x43, 0x5c, 0x49, 0xa8, 0xe9, 0xf2, 0x93, 0xc9, 0x4c, 0x3c, 0x42, 0x5c, 0xfa,
	0x65, 0x86, 0xfa, 0x19, 0x60, 0x33, 0x9c, 0xb4, 0xb8, 0xc4, 0x32, 0xf3, 0xf5, 0xd2, 0x8b, 0x0a,
	0x92, 0xd1, 0x2c, 0x0c, 0x60, 0x8c, 0x42, 0x0b, 0xca, 0x24, 0x36, 0xb0, 0x79, 0xc6, 0x80, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf7, 0x99, 0x83, 0x4c, 0x79, 0x01, 0x00, 0x00,
}
